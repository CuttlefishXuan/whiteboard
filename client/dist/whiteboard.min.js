angular.module("whiteboard",["btford.socket-io","whiteboard.services.receive","whiteboard.services.broadcast","whiteboard.services.shapebuilder","whiteboard.services.shapeeditor","whiteboard.services.shapemanipulation","whiteboard.services.snap","whiteboard.services.auth","whiteboard.services.token","whiteboard.services.sockets","whiteboard.services.boarddata","whiteboard.services.eventhandler","whiteboard.services.inputhandler","whiteboard.services.zoom","whiteboard.services.leapMotion","whiteboard.services.visualizer","ngRoute"]).config(["$routeProvider","$locationProvider","$httpProvider",function($routeProvider,$locationProvider,$httpProvider){$routeProvider.when("/",{resolve:{something:function(Sockets,Auth,$location){var roomId=Auth.generateRandomId(5);Sockets.emit("roomId",{roomId:roomId}),$location.path("/"+roomId)}}}).when("/:id",{templateUrl:"views/board.html",resolve:{somethingElse:function(Sockets,$location){Sockets.emit("roomId",{roomId:$location.path().slice(1)})}},authenticate:!0}),$locationProvider.html5Mode({enabled:!0,requireBase:!1})}]),angular.module("whiteboard").directive("wbBoard",["BoardData","Broadcast","Receive","LeapMotion",function(BoardData){return{restrict:"A",require:["wbBoard"],replace:!0,template:'<div id="board-container">   <div wb-toolbar></div>   <div wb-layers></div></div>',controller:function(InputHandler){this.handleEvent=function(ev){InputHandler[ev.type](ev)}},link:function(scope,element,attrs,ctrls){var boardCtrl=ctrls[0];BoardData.createBoard(element),BoardData.getCanvas().bind("mousedown mouseup mousemove dblclick",boardCtrl.handleEvent),$("body").on("keypress",function(ev){boardCtrl.handleEvent(ev)})}}}]),angular.module("whiteboard").directive("wbToolbar",["BoardData","Zoom",function(BoardData,Zoom){return{restrict:"A",replace:!0,templateUrl:"views/toolbar.html",require:["^wbBoard","wbToolbar"],controller:function($scope){var fill=["#e74c3c","#e67e22","#f1c40f","#1abc9c","#2ecc71","#3498db","#9b59b6","#34495e","#95a5a6","#ecf0f1"],stroke=["#c0392b","#d35400","#f39c12","#16a085","#27ae60","#2980b9","#8e44ad","#2c3e50","#7f8c8d","#bdc3c7"];$scope.menuStructure=[["Draw",["Path","Line","Arrow","Rectangle","Circle"]],["Tool",["Magnify","Eraser","Pan","Move","Copy"]],["Color",[["Fill",fill],["Stroke",stroke]]]],$scope.$on("toggleAllSubmenu",function(ev,msg){"hide"===msg.action&&(console.log("wbToolbar: closing all submenus"),$scope.$broadcast("toggleSubmenu",msg))})},link:function(scope,element,attrs,ctrls){scope.$on("activateMenu",function(event,action){"show"===action?(element.addClass("show"),scope.$broadcast("toggleMouseEv",action)):(element.removeClass("show"),scope.$broadcast("toggleMouseEv",action))})}}}]).directive("wbMenuOpener",function(){return{restrict:"C",replace:!1,require:"wbMenuOpener",scope:!1,controller:function($scope){this.menuHandler=function(attr){$scope.$emit("activateMenu",attr)}},link:function(scope,element,attrs,ctrl){element.bind("mouseover mouseleave",function(ev){"mouseover"===ev.type&&(angular.element(ev.relatedTarget).is("svg")||angular.element(ev.relatedTarget)[0].raphael)&&ctrl.menuHandler("show")})}}}).directive("wbSubmenuOpener",function(){return{restrict:"C",replace:!1,require:"wbSubmenuOpener",controller:function($scope){this.submenuOpener=function(action){this.submenuCloser({action:"hide",level:action.level}),$scope.$broadcast("toggleSubmenu",action)},this.submenuCloser=function(action){$scope.$emit("toggleAllSubmenu",action)}},link:function(scope,element,attrs,submenuOpenerCtrl){var bindMouseEv=function(){element.bind("mouseover mouseleave",function(ev){"mouseover"===ev.type&&"2"===attrs.wbLevel?(console.log("Should open submenu",ev),submenuOpenerCtrl.submenuOpener({action:"show",level:"2"})):"mouseover"===ev.type&&"3"===attrs.wbLevel?(console.log("Should open the color palette!"),submenuOpenerCtrl.submenuOpener({action:"show",level:"3"})):"mouseleave"===ev.type&&angular.element(ev.toElement).hasClass("menu-text")?(console.log("Should close submenu"),submenuOpenerCtrl.submenuCloser({action:"hide",level:"2"})):"mouseleave"===ev.type&&angular.element(ev.toElement).hasClass("level-three")?submenuOpenerCtrl.submenuCloser({action:"hide",level:"3"}):"mouseleave"===ev.type&&angular.element(ev.toElement).hasClass("wb-submenu-opener")&&(console.log("Here is where i broke D:"),submenuOpenerCtrl.submenuCloser({action:"hide",level:attrs.wbLevel}))})},unbindMouseEv=function(){element.unbind("mouseover mouseleave"),submenuOpenerCtrl.submenuCloser({action:"hide",level:"all"})};scope.$on("toggleMouseEv",function(event,action){"show"===action?(element.addClass("show"),bindMouseEv()):(element.removeClass("show"),unbindMouseEv())})}}}).directive("wbSubmenu",function(){return{restrict:"C",replace:!1,controller:function(){},link:function(scope,element,attrs,ctrl){3===attrs.wbLevel?console.log("Sono qui?"):scope.$on("toggleSubmenu",function(event,msg){"show"===msg.action?msg.level===attrs.wbLevel&&element.addClass("show"):msg.level===attrs.wbLevel?element.removeClass("show"):"all"===msg.level&&element.removeClass("show")})}}}).directive("wbSubmenuItems",function(){return{restrict:"C",replace:!1,require:"wbSubmenuItems",controller:function($scope,BoardData){$scope.setAttributeTool=function(toolName){return"string"==typeof toolName?toolName.toLowerCase():toolName[0]},this.setTool=function(toolName){BoardData.setCurrentToolName(toolName)},this.setColors=function(type,color){"fill"===type?BoardData.setColors(color,null):BoardData.setColors(null,color)}},link:function(scope,element,attrs,submenuItemsCtrl){element.bind("mouseover",function(ev){ev.stopPropagation()}),element.bind("mouseleave",function(ev){ev.stopPropagation(),console.log("!!!!!!!!!!!!!!!!!",attrs.wbTool,angular.element(ev.relatedTarget)),attrs.wbTool&&(angular.element(ev.relatedTarget).is("svg")||angular.element(ev.relatedTarget)[0].raphael)?(submenuItemsCtrl.setTool(attrs.wbTool),scope.$emit("activateMenu","hide")):attrs.wbColor&&(angular.element(ev.relatedTarget).is("svg")||angular.element(ev.relatedTarget)[0].raphael)?(submenuItemsCtrl.setColors(attrs.wbColorType,attrs.wbColor),scope.$emit("activateMenu","hide")):angular.element(ev.relatedTarget).hasClass("menu")&&scope.$emit("toggleAllSubmenu",{action:"hide",level:"3"})})}}}),angular.module("whiteboard.services.auth",[]).factory("Auth",function($http,$window){var generateRandomId=function(length){for(var id="",chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",i=0;length>i;i++)id+=chars.charAt(Math.floor(Math.random()*chars.length));return id};return{generateRandomId:generateRandomId}}),angular.module("whiteboard.services.boarddata",[]).factory("BoardData",function(){function createBoard(element){ResizeSensorApi.create(document.getElementsByClassName("app-container")[0],handleWindowResize),board=Raphael(element[0]),board.setViewBox(0,0,svgWidth,svgHeight,!0),board.canvas.setAttribute("preserveAspectRatio","none"),$canvas=element.find("svg"),canvasMarginX=$canvas.position().left,canvasMarginY=$canvas.position().top}function handleWindowResize(newPageSize){svgWidth=newPageSize.width,svgHeight=newPageSize.height,viewBoxWidth=svgWidth*scalingFactor,viewBoxHeight=svgHeight*scalingFactor;var offset=getOffset();board.setViewBox(offset.x,offset.y,viewBoxWidth,viewBoxHeight,!0)}function getBoard(){return board}function getCursor(){return cursor}function setCursor(){return cursor=board.circle(window.innerWidth/2,window.innerHeight/2,5)}function moveCursor(screenPosition){cursor.attr({cx:Math.floor(screenPosition[0]),cy:Math.floor(screenPosition[1])})}function setEditorShape(shape){editorShape=shape}function unsetEditorShape(){editorShape=null}function getEditorShape(){return editorShape}function getViewBoxDims(){return{width:viewBoxWidth,height:viewBoxHeight}}function setViewBoxDims(newViewBoxDims){viewBoxWidth=newViewBoxDims.width,viewBoxHeight=newViewBoxDims.height}function getOriginalDims(){return{width:svgWidth,height:svgHeight}}function getCanvasMargin(){return{x:canvasMarginX,y:canvasMarginY}}function getScalingFactor(){return scalingFactor}function getOffset(){return{x:offsetX,y:offsetY}}function setOffset(newOffset){offsetX=newOffset.x,offsetY=newOffset.y}function getCanvas(){return $canvas}function setSocketId(id){socketId=id}function getSocketId(){return socketId}function pushToStorage(id,socketId,shape){shapeStorage[socketId]||(shapeStorage[socketId]={}),shapeStorage[socketId][id]=shape}function getShapeById(id,socketId){return shapeStorage[socketId][id]}function getCurrentShape(){return currentShape}function setCurrentShape(id){currentShape=shapeStorage[socketId][id]}function unsetCurrentShape(){currentShape=null}function getCurrentShapeId(){return currentShapeId}function generateShapeId(){return currentShapeId=Raphael._oid}function getCurrentTool(){return tool}function setCurrentToolName(name){tool.name=name}function setColors(fill,stroke){fill=fill||tool.colors.fill,stroke=stroke||tool.colors.stroke,tool.colors.fill=fill,tool.colors.stroke=stroke}function setZoomScale(scale){scalingFactor=1/scale}function getZoomScale(){return scalingFactor}function getShapeStorage(){return shapeStorage}function setStrokeWidth(width){tool["stroke-width"]=width}function getStrokeWidth(){return tool["stroke-width"]}var board,$canvas,canvasMarginX,canvasMarginY,viewBoxWidth,viewBoxHeight,cursor,currentShape,currentShapeId,editorShape,socketId,svgWidth=1500,svgHeight=1e3,offsetX=0,offsetY=0,scalingFactor=1,shapeStorage={},tool={name:"path","stroke-width":1,colors:{fill:"transparent",stroke:"#000000"}};return{getShapeStorage:getShapeStorage,getCursor:getCursor,setCursor:setCursor,moveCursor:moveCursor,createBoard:createBoard,getCurrentShape:getCurrentShape,getShapeById:getShapeById,getCurrentTool:getCurrentTool,generateShapeId:generateShapeId,getCurrentShapeId:getCurrentShapeId,setColors:setColors,setZoomScale:setZoomScale,getZoomScale:getZoomScale,getCanvas:getCanvas,setSocketId:setSocketId,getSocketId:getSocketId,setCurrentToolName:setCurrentToolName,getBoard:getBoard,getScalingFactor:getScalingFactor,getOffset:getOffset,getCanvasMargin:getCanvasMargin,pushToStorage:pushToStorage,setCurrentShape:setCurrentShape,unsetCurrentShape:unsetCurrentShape,getViewBoxDims:getViewBoxDims,setViewBoxDims:setViewBoxDims,setOffset:setOffset,getOriginalDims:getOriginalDims,setEditorShape:setEditorShape,unsetEditorShape:unsetEditorShape,getEditorShape:getEditorShape,setStrokeWidth:setStrokeWidth,getStrokeWidth:getStrokeWidth}}),angular.module("whiteboard.services.broadcast",[]).factory("Broadcast",function(Sockets){var socketUserId,getSocketId=function(){return socketUserId},saveSocketId=function(id){socketUserId=id};Sockets.emit("idRequest");var newShape=function(myid,socketId,tool,mouseX,mouseY){Sockets.emit("newShape",{myid:myid,socketId:socketId,tool:tool,initX:mouseX,initY:mouseY})},editShape=function(myid,socketId,currentTool,mouseX,mouseY){var data={};data.mouseX=mouseX,data.mouseY=mouseY,data.myid=myid,data.socketId=socketId,data.tool=currentTool,Sockets.emit("editShape",data)},finishPath=function(myid,currentTool,pathDProps){Sockets.emit("pathCompleted",{myid:myid,tool:currentTool,pathDProps:pathDProps})},finishShape=function(myid,currentTool){Sockets.emit("shapeCompleted",{myid:myid,tool:currentTool})},deleteShape=function(myid,socketId){Sockets.emit("deleteShape",{myid:myid,socketId:socketId})},moveShape=function(shape,x,y){shape.type;Sockets.emit("moveShape",{myid:shape.myid,socketId:shape.socketId,x:x,y:y,attr:shape.attr()})},finishMovingShape=function(shape){Sockets.emit("finishMovingShape",{myid:shape.myid,socketId:shape.socketId,attr:shape.attr()})};return{getSocketId:getSocketId,saveSocketId:saveSocketId,newShape:newShape,editShape:editShape,finishPath:finishPath,finishShape:finishShape,deleteShape:deleteShape,finishMovingShape:finishMovingShape,moveShape:moveShape}}),angular.module("whiteboard.services.eventhandler",[]).factory("EventHandler",["BoardData","ShapeBuilder","ShapeEditor","ShapeManipulation","Snap",function(BoardData,ShapeBuilder,ShapeEditor,ShapeManipulation,Snap){function setSocketId(socketId){BoardData.setSocketId(socketId)}function createShape(id,socketId,tool,x,y){ShapeBuilder.newShape(id,socketId,tool,x,y)}function editShape(id,socketId,tool,x,y){ShapeEditor.editShape(id,socketId,tool,x,y)}function finishShape(id,socketId,tool){ShapeEditor.finishShape(id,socketId,tool)}function deleteShape(id,socketId){ShapeEditor.deleteShape(id,socketId)}function moveShape(shape,x,y){ShapeManipulation.moveShape(shape.myid,shape.socketId,x,y)}function finishMovingShape(id,socketId){ShapeManipulation.finishMovingShape(id,socketId)}function drawExistingPath(shape){ShapeBuilder.drawExistingPath(shape);var currentShape=BoardData.getShapeById(shape.myid,shape.socketId);ShapeManipulation.pathSmoother(currentShape)}function cursor(screenPosition){BoardData.getCursor()||BoardData.setCursor();BoardData.moveCursor(screenPosition)}function grabShape(screenPosition){var currentEditorShape,x=Math.floor(screenPosition[0]),y=Math.floor(screenPosition[1]);if(currentEditorShape=BoardData.getEditorShape())moveShape(currentEditorShape,x,y);else{var shape=BoardData.getBoard().getElementByPoint(x,y);shape&&(BoardData.setEditorShape(shape),currentEditorShape=BoardData.getEditorShape())}}return{cursor:cursor,setSocketId:setSocketId,createShape:createShape,editShape:editShape,finishShape:finishShape,deleteShape:deleteShape,moveShape:moveShape,finishMovingShape:finishMovingShape,drawExistingPath:drawExistingPath,grabShape:grabShape}}]),angular.module("whiteboard.services.inputhandler",[]).factory("InputHandler",["BoardData","Snap","EventHandler","Broadcast","Visualizer","Zoom",function(BoardData,Snap,EventHandler,Broadcast,Visualizer,Zoom){function toggle(attr){toggleAttrs[attr]?toggleAttrs[attr]=!1:toggleAttrs[attr]=!0}function isToggled(attr){return toggleAttrs[attr]}function getMouseXY(ev){var canvasMarginXY=BoardData.getCanvasMargin(),scalingFactor=BoardData.getScalingFactor(),offsetXY=BoardData.getOffset();return{x:(ev.clientX-canvasMarginXY.x)*scalingFactor+offsetXY.x,y:(ev.clientY-canvasMarginXY.y)*scalingFactor+offsetXY.y}}function parseToolName(toolName){for(var i=0;i<shapeTools.length;i++)toolName===shapeTools[i]&&(toolName="shape");return toolName||(toolName="noName"),toolName}function mouseDown(ev){var toolName=parseToolName(BoardData.getCurrentTool().name);toggle(toolName),actions[toolName].mouseDown(ev)}function mouseMove(ev){var toolName=parseToolName(BoardData.getCurrentTool().name);isToggled(toolName)?actions[toolName].mouseHold(ev):actions[toolName].mouseOver(ev)}function mouseUp(ev){var toolName=parseToolName(BoardData.getCurrentTool().name);isToggled(toolName)&&(toggle(toolName),actions[toolName].mouseUp(ev))}function doubleClick(ev){}function keyPress(ev){var toolName=parseToolName(BoardData.getCurrentTool().name);"text"!==toolName&&109===ev.keyCode&&console.log("m has been typed")}var toggleAttrs={},actions={};actions.eraser={mouseDown:function(ev){},mouseHold:function(ev){var shape=BoardData.getBoard().getElementByPoint(ev.clientX,ev.clientY);shape&&(Broadcast.deleteShape(shape.myid,shape.socketId),EventHandler.deleteShape(shape.myid,shape.socketId))},mouseUp:function(ev){},mouseOver:function(ev){}},actions.pan={mouseDown:function(ev){},mouseHold:function(ev){Zoom.pan(ev)},mouseUp:function(ev){Zoom.resetPan()},mouseOver:function(ev){}},actions.move={mouseDown:function(ev){var shape=BoardData.getBoard().getElementByPoint(ev.clientX,ev.clientY);shape?(console.log("Shape found!"),BoardData.setEditorShape(shape)):toggle("move")},mouseHold:function(ev){var currentEditorShape=BoardData.getEditorShape(),mouseXY=getMouseXY(ev);Visualizer.clearSelection(),EventHandler.moveShape(currentEditorShape,mouseXY.x,mouseXY.y),Broadcast.moveShape(currentEditorShape,mouseXY.x,mouseXY.y)},mouseUp:function(ev){var editorShape=BoardData.getEditorShape();BoardData.getCurrentTool();Broadcast.finishMovingShape(editorShape),EventHandler.finishMovingShape(editorShape.myid,editorShape.socketId),BoardData.unsetEditorShape()},mouseOver:function(ev){Visualizer.visualizeSelection(ev)}},actions.text={mouseDown:function(ev){var id=BoardData.generateShapeId(),mouseXY=getMouseXY(ev),socketId=BoardData.getSocketId(),currentTool=BoardData.getCurrentTool();currentTool.text="Insert Text",EventHandler.createShape(id,socketId,currentTool,mouseXY.x,mouseXY.y),BoardData.setCurrentShape(id),Broadcast.newShape(id,socketId,currentTool,mouseXY.x,mouseXY.y);var currentShape=BoardData.getCurrentShape();document.onkeypress=function(ev){BoardData.setEditorShape(currentShape);var editorShape=BoardData.getEditorShape();"Insert Text"===editorShape.attr("text")&&(editorShape.attr("text",""),currentTool.text=""),13===ev.keyCode?(editorShape.tool=currentTool,Broadcast.finishShape(id,currentTool),EventHandler.finishShape(editorShape),editorShape=null):(editorShape.attr("text",editorShape.attr("text")+String.fromCharCode(ev.keyCode)),currentTool.text=editorShape.attr("text"),Broadcast.editShape(id,socketId,currentTool,editorShape.initX,editorShape.initY),EventHandler.editShape(id,socketId,currentTool,editorShape.initX,editorShape.initY))},document.onkeydown=function(ev){BoardData.setEditorShape(currentShape);var editorShape=BoardData.getEditorShape();8===ev.which&&(ev.preventDefault(),editorShape&&(editorShape.attr("text",editorShape.attr("text").slice(0,editorShape.attr("text").length-1)),currentTool.text=editorShape.attr("text"),Broadcast.editShape(id,socketId,currentTool,editorShape.initX,editorShape.initY),EventHandler.editShape(id,socketId,currentTool,editorShape.initX,editorShape.initY)))}},mouseHold:function(ev){},mouseUp:function(ev){},mouseOver:function(ev){}},actions.shape={mouseDown:function(ev){var socketId=BoardData.getSocketId(),currentTool=BoardData.getCurrentTool(),mouseXY=getMouseXY(ev),coords=Snap.snapToPoints(mouseXY.x,mouseXY.y),id=BoardData.generateShapeId();EventHandler.createShape(id,socketId,currentTool,coords[0],coords[1]),BoardData.setCurrentShape(id),Broadcast.newShape(id,socketId,currentTool,coords[0],coords[1])},mouseHold:function(ev){var id=BoardData.getCurrentShapeId(),socketId=BoardData.getSocketId(),currentTool=BoardData.getCurrentTool(),mouseXY=getMouseXY(ev);Broadcast.editShape(id,socketId,currentTool,mouseXY.x,mouseXY.y),EventHandler.editShape(id,socketId,currentTool,mouseXY.x,mouseXY.y)},mouseUp:function(ev){var id=BoardData.getCurrentShapeId(),socketId=BoardData.getSocketId(),currentTool=BoardData.getCurrentTool(),shape=BoardData.getCurrentShape();shape.tool=currentTool,EventHandler.finishShape(id,socketId,currentTool),BoardData.unsetCurrentShape(),Visualizer.clearSnaps(),"path"===currentTool.name?Broadcast.finishPath(id,currentTool,shape.pathDProps):Broadcast.finishShape(id,currentTool)},mouseOver:function(ev){var mouseXY=getMouseXY(ev);Snap.snapToPoints(mouseXY.x,mouseXY.y)}},actions.magnify={mouseDown:function(ev){},mouseHold:function(ev){var mouseXY=getMouseXY(ev);Zoom.zoom(ev,mouseXY)},mouseUp:function(ev){Zoom.resetZoom()},mouseOver:function(ev){}},actions.noTool={mouseDown:function(ev){},mouseHold:function(ev){},mouseUp:function(ev){},mouseOver:function(ev){}};var shapeTools=["line","circle","path","rectangle","arrow"];return{mousedown:mouseDown,mousemove:mouseMove,mouseup:mouseUp,dblclick:doubleClick,keypress:keyPress}}]),angular.module("whiteboard.services.leapMotion",[]).factory("LeapMotion",["EventHandler",function(EventHandler){new Leap.Controller({enableGestures:!0}).use("screenPosition",{scale:.25}).connect().on("frame",function(frame){frame.hands.forEach(function(hand,index){console.log(hand.indexFinger.touchZone),EventHandler.cursor(hand.indexFinger.screenPosition()),hand.indexFinger.extended,1===hand.grabStrength&&EventHandler.grabShape(hand.screenPosition()),1===hand.pinchStrength})});return{}}]),angular.module("whiteboard.services.menuhandler",[]).factory("MenuHandler",["BoardData",function(BoardData){function setToolbarElements(element){$menuOpener=element.find(".menu-opener"),$firstLevelMenu=element.find(".menu.first-level"),$secondLevelMenu=element.find(".menu.second-level")}function firstLevelHandler(ev,action){action=action||"show","show"===action?showFirstLevel():"hide"===action&&(hideThirdLevel(),hideSecondLevel(),hideFirstLevel())}function secondLevelHandler(ev,child){var x=ev.clientX;console.log(ev),menuWidth>x&&"mouseleave"===ev.type?hideSecondLevel(child):x>activeArea?showSecondLevel(child):hideSecondLevel(child)}function selectToolHandler(ev,tool,element){var x=ev.clientX;if(void 0===itemWithThirdLevel[tool])"mouseover"===ev.type?showTriggerSelect(element):"mouseleave"===ev.type&&hideTriggerSelect(element),x>=380&&BoardData.setCurrentToolName(tool);else{var child=element.find(".menu.third-level");400>x&&"mouseleave"===ev.type?(hideThirdLevel(child),console.log(1)):x>300?(showThirdLevel(child),console.log(2)):(console.log(3),hideThirdLevel(child))}}function showFirstLevel(){$menuOpener.removeClass("show"),$firstLevelMenu.addClass("show")}function hideFirstLevel(){$firstLevelMenu.removeClass("show"),$menuOpener.addClass("show")}function showSecondLevel(child){$secondLevelMenu.filter("#"+child).addClass("show")}function hideSecondLevel(child){child?$secondLevelMenu.filter("#"+child).removeClass("show"):$secondLevelMenu.removeClass("show")}function showThirdLevel(child){console.log(child),child.addClass("show")}function hideThirdLevel(child){child?child.removeClass("show"):$(".menu.third-level").removeClass("show")}function showTriggerSelect(element){element.find(".trigger-select-tool").addClass("show")}function hideTriggerSelect(element){element.find(".trigger-select-tool").removeClass("show")}var $menuOpener,$firstLevelMenu,$secondLevelMenu,menuWidth=200,activeArea=menuWidth/2,itemWithThirdLevel={fill:!1};return{setToolbarElements:setToolbarElements,firstLevelHandler:firstLevelHandler,secondLevelHandler:secondLevelHandler,selectToolHandler:selectToolHandler}}]),angular.module("whiteboard.services.receive",[]).factory("Receive",function(Sockets,EventHandler){return Sockets.on("showExisting",function(data){console.log(data);for(socketId in data)if(Object.keys(data[socketId]).length)for(id in data[socketId]){var thisShape=data[socketId][id];"path"===thisShape.tool.name?EventHandler.drawExistingPath(thisShape):thisShape.initX&&thisShape.initY&&(EventHandler.createShape(id,socketId,thisShape.tool,thisShape.initX,thisShape.initY),"text"!==thisShape.tool.name&&EventHandler.editShape(id,socketId,thisShape.tool,thisShape.mouseX,thisShape.mouseY),EventHandler.finishShape(thisShape.myid,thisShape.socketId,thisShape.tool))}}),Sockets.on("socketId",function(data){EventHandler.setSocketId(data.socketId)}),Sockets.on("shapeEdited",function(data){EventHandler.editShape(data.myid,data.socketId,data.tool,data.mouseX,data.mouseY)}),Sockets.on("shapeCompleted",function(data){EventHandler.finishShape(data)}),Sockets.on("shapeCreated",function(data){EventHandler.createShape(data.myid,data.socketId,data.tool,data.initX,data.initY)}),Sockets.on("shapeMoved",function(data){EventHandler.moveShape(data,data.x,data.y)}),Sockets.on("shapeFinishedMoving",function(data){EventHandler.finishMovingShape(data.myid,data.socketId)}),Sockets.on("shapeDeleted",function(data){EventHandler.deleteShape(data.myid,data.socketId)}),{}}),angular.module("whiteboard.services.shapebuilder",[]).factory("ShapeBuilder",["BoardData",function(BoardData){function setColor(shape,colors){"path"===shape.type?shape.attr("stroke",colors.stroke):(shape.attr("stroke",colors.stroke),shape.attr("fill",colors.fill))}function drawExistingPath(shape){newShape(shape.myid,shape.socketId,shape.tool,shape.initX,shape.initY);var existingPath=BoardData.getShapeById(shape.myid,shape.socketId);existingPath.customSetPathD(shape.pathDProps),existingPath.pathDProps=shape.pathDProps,BoardData.pushToStorage(shape.myid,shape.socketId,existingPath)}function newShape(id,socketId,tool,x,y){var shapeConstructors={circle:function(x,y){return BoardData.getBoard().circle(x,y,0)},line:function(x,y){return BoardData.getBoard().path("M"+String(x)+","+String(y))},path:function(x,y){var path=BoardData.getBoard().path("M"+String(x)+","+String(y));return path.pathDProps="",path},rectangle:function(x,y){return BoardData.getBoard().rect(x,y,0,0)},text:function(x,y,text){return text?BoardData.getBoard().text(x,y,text):BoardData.getBoard().text(x,y,"Insert Text")},arrow:function(x,y){var arrow=BoardData.getBoard().path("M"+String(x)+","+String(y));return arrow.attr("arrow-end","classic-wide-long"),arrow}},shape=tool.text?shapeConstructors[tool.name](x,y,tool.text):shapeConstructors[tool.name](x,y);shape.initX=x,shape.initY=y,setColor(shape,tool.colors),shape.myid=id,shape.socketId=socketId,shape.attr("stroke-width",BoardData.getStrokeWidth()),BoardData.pushToStorage(id,socketId,shape)}return{newShape:newShape,drawExistingPath:drawExistingPath}}]),angular.module("whiteboard.services.shapeeditor",[]).factory("ShapeEditor",["BoardData","Snap","ShapeManipulation",function(BoardData,Snap,ShapeManipulation){function editShape(id,socketId,tool,x,y){var shapeHandlers={circle:changeCircle,path:changePath,line:changeLine,arrow:changeLine,rectangle:changeRectangle,text:changeText},shape=BoardData.getShapeById(id,socketId);shapeHandlers[tool.name](shape,x,y,tool)}function finishShape(id,socketId,tool){var shape=BoardData.getShapeById(id,socketId);"text"===shape.type&&shape.attr({text:tool.text}),Snap.createSnaps(shape),!shape.myid&&0!==shape.myid||"path"!==tool.name||ShapeManipulation.pathSmoother(shape)}function deleteShape(id,socketId){var shape=BoardData.getShapeById(id,socketId);Snap.deleteSnaps(shape),shape.remove()}var changeCircle=function(shape,x,y){var coords=Snap.snapToPoints(x,y);(shape.initX!==coords[0]||shape.initY!==coords[1])&&(x=coords[0],y=coords[1]);var deltaX=x-shape.initX,deltaY=y-shape.initY,newRadius=Math.sqrt(Math.pow(deltaX,2)+Math.pow(deltaY,2));shape.attr("r",newRadius)},changeLine=function(shape,x,y){var deltaX=x-shape.initX,deltaY=y-shape.initY;Math.sqrt(Math.pow(deltaX,2)+Math.pow(deltaY,2))>20&&(Math.abs(deltaY)<5?y=shape.initY:Math.abs(deltaX)<5&&(x=shape.initX));var coords=Snap.snapToPoints(x,y);(shape.initX!==coords[0]||shape.initY!==coords[1])&&(x=coords[0],y=coords[1]);var linePathOrigin="M"+String(shape.initX)+","+String(shape.initY),linePathEnd="L"+String(x)+","+String(y);shape.attr("path",linePathOrigin+linePathEnd)},changePath=function(shape,x,y){shape.pathDProps+=""===shape.pathDProps?"M"+shape.initX+","+shape.initY+"L"+x+","+y:"L"+x+","+y,shape.customSetPathD(shape.pathDProps)},changeRectangle=function(shape,x,y){var left,top,coords=Snap.snapToPoints(x,y);x<shape.initX&&y<shape.initY?(left=coords[0],top=coords[1],width=shape.initX-left,height=shape.initY-top):x<shape.initX?(left=coords[0],top=shape.initY,width=shape.initX-left,height=coords[1]-shape.initY):y<shape.initY?(left=shape.attr("x"),top=coords[1],width=coords[0]-shape.initX,height=shape.initY-top):(left=shape.attr("x"),top=shape.attr("y"),width=coords[0]-shape.initX,height=coords[1]-shape.initY),shape.attr({x:left,y:top,width:width,height:height})},changeText=function(shape,x,y,tool){shape.attr({x:x,y:y,text:tool.text})};return{editShape:editShape,finishShape:finishShape,deleteShape:deleteShape}}]),angular.module("whiteboard.services.shapemanipulation",[]).factory("ShapeManipulation",["BoardData","ShapeBuilder","Snap",function(BoardData,ShapeBuilder,Snap){function moveCircle(shape,x,y){var deltaX=x-grabPoint.x,deltaY=y-grabPoint.y;shape.attr();shape.attr({cx:origin.cx+deltaX,cy:origin.cy+deltaY})}function moveRectangle(shape,x,y){var deltaX=x-grabPoint.x,deltaY=y-grabPoint.y;shape.attr({x:origin.x+deltaX,y:origin.y+deltaY})}function moveShape(id,socketId,x,y){var shapeHandlers={circle:moveCircle,rect:moveRectangle},shape=BoardData.getShapeById(id,socketId).toFront();grabPoint||(grabPoint={x:x,y:y},origin=shape.attr()),shapeHandlers[shape.type](shape,x,y)}function finishMovingShape(id,socketId){grabPoint=null,origin=null;var shape=BoardData.getShapeById(id,socketId);Snap.createSnaps(shape)}var grabPoint,origin,pathSmoother=function(pathElement){var path=pathElement.attr("path");path=path.length>1?path:Raphael.parsePathString(pathElement.pathDProps);var interval=5,newPath=path.reduce(function(newPathString,currentPoint,index,path){return index%interval&&index!==path.length-1?newPathString:newPathString+=currentPoint[1]+","+currentPoint[2]+" "},path[0][0]+path[0][1]+","+path[0][2]+" R");pathElement.attr("path",newPath)};return{pathSmoother:pathSmoother,moveShape:moveShape,finishMovingShape:finishMovingShape}}]),angular.module("whiteboard.services.snap",[]).factory("Snap",["BoardData","Visualizer",function(BoardData,Visualizer){function Point(x,y){this.x=x,this.y=y}function Node(val,left,right){this.val=val,this.left=left||null,this.right=right||null}function Rectangle(x0,y0,x1,y1){this.left=x0,this.bottom=y0,this.right=x1,this.top=y1}function KDTree(points,depth){var split,sortedPoints;if(points=points||generatePoints(10),depth=depth||0,points.length<=1)return points[0];var mid=Math.ceil(points.length/2);depth%2===0?(sortedPoints=points.slice().sort(function(a,b){return a.x-b.x}),split=sortedPoints[mid].x):(sortedPoints=points.slice().sort(function(a,b){return a.y-b.y}),split=sortedPoints[mid].y);var left=new KDTree(sortedPoints.slice(0,mid),depth+1),right=new KDTree(sortedPoints.slice(mid),depth+1);return new Node(split,left,right)}function reportSubtree(node){if(node instanceof Node){var returnArr=[];return returnArr.concat(reportSubtree(node.left),reportSubtree(node.right))}return node}function pointIsInRange(point,range){return point.x>=range.left&&point.x<=range.right&&point.y>=range.bottom&&point.y<=range.top}function regionIntersection(r1,r2){var left=Math.max(r1.left,r2.left),bottom=Math.max(r1.bottom,r2.bottom),right=Math.min(r1.right,r2.right),top=Math.min(r1.top,r2.top);return left>right||bottom>top?null:new Rectangle(left,bottom,right,top)}function regionContainedInRange(region,range){return region.left>range.left&&region.bottom>range.bottom&&region.right<range.right&&region.top<range.top}function searchKDTree(node,range,nodeRange,depth){if(depth=depth||0,nodeRange=nodeRange||new Rectangle(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY),"number"!=typeof node.x||"number"!=typeof node.y){var leftRange=new Rectangle(nodeRange.left,nodeRange.bottom,nodeRange.right,nodeRange.top),rightRange=new Rectangle(nodeRange.left,nodeRange.bottom,nodeRange.right,nodeRange.top);depth%2===0?(leftRange.right=node.val,rightRange.left=node.val):(leftRange.top=node.val,rightRange.bottom=node.val);var subtreeNodes,returnArr=[];return regionContainedInRange(leftRange,range)?(subtreeNodes=reportSubtree(node.left),subtreeNodes&&(returnArr=returnArr.concat(subtreeNodes))):regionIntersection(leftRange,range)&&(subtreeNodes=searchKDTree(node.left,range,leftRange,depth+1),subtreeNodes&&(returnArr=returnArr.concat(subtreeNodes))),regionContainedInRange(rightRange,range)?(subtreeNodes=reportSubtree(node.right),subtreeNodes&&(returnArr=returnArr.concat(subtreeNodes))):regionIntersection(rightRange,range)&&(subtreeNodes=searchKDTree(node.right,range,rightRange,depth+1),subtreeNodes&&(returnArr=returnArr.concat(subtreeNodes))),returnArr}return pointIsInRange(node,range)?node:void 0}var endSnapTree,findSnaps=function(shape){var newSnaps=[];if("rect"===shape.type){var x=shape.attr("x"),y=shape.attr("y"),width=shape.attr("width"),height=shape.attr("height"),cornerSnaps=[new Point(x,y),new Point(x+width,y),new Point(x,y+height),new Point(x+width,y+height)],cardinalSnaps=[new Point(x+width/2,y),new Point(x,y+height/2),new Point(x+width,y+height/2),new Point(x+width/2,y+height)];cornerSnaps.forEach(function(snap){newSnaps.push(snap)}.bind(this)),cardinalSnaps.forEach(function(snap){newSnaps.push(snap)}.bind(this))}else if("path"===shape.type){void 0!==shape.pathDProps&&shape.attr("path",shape.pathDProps);
var path=shape.attr("path");path.length<=1?shape.remove():2===path.length?(startPoint=new Point(path[0][1],path[0][2]),endPoint=new Point(path[1][1],path[1][2]),midPoint=new Point(startPoint.x+(endPoint.x-startPoint.x)/2,startPoint.y+(endPoint.y-startPoint.y)/2),newSnaps.push(startPoint,midPoint,endPoint)):(startPoint=new Point(path[0][1],path[0][2]),endPoint=new Point(path[path.length-1][1],path[path.length-1][2]),newSnaps.push(startPoint,endPoint))}else if("circle"===shape.type){var cx=shape.attr("cx"),cy=shape.attr("cy"),r=shape.attr("r"),centerSnap=new Point(cx,cy);cardinalSnaps=[new Point(cx+r,cy),new Point(cx-r,cy),new Point(cx,cy+r),new Point(cx,cy-r)],newSnaps.push(centerSnap),cardinalSnaps.forEach(function(snap){newSnaps.push(snap)})}return newSnaps},createSnaps=function(shape){Visualizer.clearSnaps(),this.endSnaps[shape.myid]=findSnaps(shape),recreateKDTree(this.endSnaps)},deleteSnaps=function(shape){this.endSnaps[shape.myid]=null,recreateKDTree(this.endSnaps)},recreateKDTree=function(snaps){var flatSnaps=[];for(var key in snaps)null!==snaps[key]&&(flatSnaps=flatSnaps.concat(snaps[key]));endSnapTree=new KDTree(flatSnaps)},snapToPoints=function(x,y,tolerance){var scale=BoardData.getZoomScale();if(!this.snapsEnabled||!endSnapTree||!endSnapTree.val)return[x,y];tolerance||(tolerance=this.tolerance),tolerance*=scale;for(var buffer=50*scale,searchBox=new Rectangle(x-(tolerance+buffer),y-(tolerance+buffer),x+(tolerance+buffer),y+(tolerance+buffer)),localTree=searchKDTree(endSnapTree,searchBox),i=0;i<localTree.length;i++){var pointX=localTree[i].x,pointY=localTree[i].y,dist=Math.sqrt(Math.pow(x-pointX,2)+Math.pow(y-pointY,2));if(tolerance>dist&&(!closest||closestDist>dist))var closest=localTree[i],closestDist=dist}return Visualizer.visualizeSnaps(localTree,closest),closest?[closest.x,closest.y]:[x,y]};return{endSnaps:{},snapsEnabled:!0,tolerance:7,createSnaps:createSnaps,deleteSnaps:deleteSnaps,snapToPoints:snapToPoints}}]),angular.module("whiteboard.services.sockets",[]).factory("Sockets",function(socketFactory){var myIoSocket=io.connect();return mySocket=socketFactory({ioSocket:myIoSocket}),mySocket}),angular.module("whiteboard.services.token",[]).factory("AttachTokens",function($window){var attach={request:function(object){var jwt=$window.localStorage.getItem("token");return jwt&&(object.headers["x-access-token"]=jwt),object.headers["Allow-Control-Allow-Origin"]="*",object}};return attach}),angular.module("whiteboard.services.visualizer",[]).factory("Visualizer",["BoardData",function(BoardData){function visualizeSelection(ev){var board=BoardData.getBoard(),scale=BoardData.getZoomScale(),selection=board.getElementByPoint(ev.clientX,ev.clientY);selection&&selection===selected||selectionGlow&&(selectionGlow.remove(),selectionGlow.clear(),selected=null),!selection||selectionGlow&&0!==selectionGlow.items.length||(selected=selection,selectionGlow=selection.glow({color:"blue",width:10*scale}))}function clearSelection(){selectionGlow&&(selectionGlow.remove(),selectionGlow.clear(),selected=null)}function visualizeSnaps(snaps,closest){var board=BoardData.getBoard(),scale=BoardData.getZoomScale();displayedSnaps?(displayedSnaps.remove(),displayedSnaps.clear()):displayedSnaps=BoardData.getBoard().set();for(var snap in snaps)snaps[snap]===closest?displayedSnaps.push(board.circle(snaps[snap].x,snaps[snap].y,5*scale).attr({stroke:"red","stroke-width":1*scale})):displayedSnaps.push(board.circle(snaps[snap].x,snaps[snap].y,3.5*scale).attr({stroke:"green","stroke-width":1*scale}))}function clearSnaps(){displayedSnaps&&(displayedSnaps.remove(),displayedSnaps.clear())}var selectionGlow,selected,displayedSnaps;return{visualizeSelection:visualizeSelection,visualizeSnaps:visualizeSnaps,clearSelection:clearSelection,clearSnaps:clearSnaps}}]),angular.module("whiteboard.services.zoom",[]).factory("Zoom",["BoardData",function(BoardData){function zoom(ev,mouseXY){var board=BoardData.getBoard(),scalingFactor=BoardData.getZoomScale(),offset=BoardData.getOffset(),originalDims=BoardData.getOriginalDims(),currentDims=BoardData.getViewBoxDims();if(mouseXY){if(last){var up;up=ev.clientY>last?1.05:ev.clientY<last?.95:1,scalingFactor*=up,BoardData.setZoomScale(1/scalingFactor)}last=ev.clientY}var newViewBoxDims={width:originalDims.width*scalingFactor,height:originalDims.height*scalingFactor};if(BoardData.setViewBoxDims(newViewBoxDims),mouseXY)var newOffset={x:offset.x,y:offset.y};else var newOffset={x:offset.x+currentDims.width/2-newViewBoxDims.width/2,y:offset.y+currentDims.height/2-newViewBoxDims.height/2};BoardData.setOffset(newOffset),board.setViewBox(newOffset.x,newOffset.y,newViewBoxDims.width,newViewBoxDims.height)}function resetZoom(){last=null}function pan(ev){var board=BoardData.getBoard(),scalingFactor=BoardData.getScalingFactor(),offset=BoardData.getOffset(),currentDims=BoardData.getViewBoxDims(),canvasMargin=BoardData.getCanvasMargin(),mousePosition={x:(ev.clientX-canvasMargin.x)*scalingFactor+offset.x,y:(ev.clientY-canvasMargin.y)*scalingFactor+offset.y};startPanCoords?(newOffset={x:startPanOffset.x+(startPanCoords.x-mousePosition.x),y:startPanOffset.y+(startPanCoords.y-mousePosition.y)},board.setViewBox(newOffset.x,newOffset.y,currentDims.width,currentDims.height)):(startPanCoords=mousePosition,startPanOffset=offset)}function resetPan(){startPanCoords=startPanOffset=null,BoardData.setOffset(newOffset)}var last,startPanCoords,startPanOffset,newOffset;return{zoom:zoom,resetZoom:resetZoom,pan:pan,resetPan:resetPan}}]);